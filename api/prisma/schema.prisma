generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  activeWeekly   Boolean   @default(true)
  activeBiweekly Boolean   @default(true)
  shameCount     Int       @default(0)
  exceptions     String[]  @default([])
  unavailable    Json?     // [{from: "YYYY-MM-DD", to: "YYYY-MM-DD"}, ...]
  assignments    Assignment[]
  createdAt      DateTime  @default(now())
}


model Task {
  id          Int          @id @default(autoincrement())
  slug        String       @unique
  title       String
  cadence     String       // 'weekly' | 'biweekly'
  notes       String?
  offsetWeeks Int          @default(0)  
  assignments Assignment[]
}


model Plan {
  id          String       @id @default(uuid())
  startsOn    DateTime
  weeks       Int
  status      String       // 'draft' | 'published'
  createdAt   DateTime     @default(now())
  assignments Assignment[]
}

model Assignment {
  id           Int      @id @default(autoincrement())
  planId       String
  taskId       Int
  weekIndex    Int
  personId     Int?
  autoGenerated Boolean  @default(true)

  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)
  task   Task   @relation(fields: [taskId], references: [id])
  person Person? @relation(fields: [personId], references: [id])

  @@unique([planId, taskId, weekIndex])
}

enum DutyKind {
  FIXED   // Feste Ämtli
  HONOR   // Ehren Ämtli
}

model Duty {
  id         Int       @id @default(autoincrement())
  kind       DutyKind
  label      String
  assignees  String    // free text: "Sven,tbd,tbd"
  order      Int       @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
